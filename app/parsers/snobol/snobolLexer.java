// Generated from snobol/snobol.g4 by ANTLR 4.7.1
package parsers.snobol;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class snobolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, COMMA=36, LPAREN=37, RPAREN=38, 
		AMP=39, PLUS=40, MINUS=41, TIMES=42, DIV=43, POW=44, EQ=45, COLON=46, 
		END=47, STRINGLITERAL1=48, STRINGLITERAL2=49, STRING=50, INTEGER=51, REAL=52, 
		COMMENT=53, EOL=54, WS=55;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "COMMA", "LPAREN", "RPAREN", "AMP", "PLUS", "MINUS", 
		"TIMES", "DIV", "POW", "EQ", "COLON", "END", "STRINGLITERAL1", "STRINGLITERAL2", 
		"STRING", "INTEGER", "REAL", "A", "B", "C", "D", "E", "F", "G", "H", "I", 
		"J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", 
		"X", "Y", "Z", "COMMENT", "EOL", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'['", "']'", "'ident'", "'differ'", "'eq'", "'ne'", "'ge'", "'gt'", 
		"'le'", "'lt'", "'integer'", "'lgt'", "'atan'", "'chop'", "'cos'", "'exp'", 
		"'ln'", "'remdr'", "'sin'", "'tan'", "'dupl'", "'reverse'", "'date'", 
		"'replace'", "'size'", "'trim'", "'array'", "'convert'", "'table'", "'sort'", 
		"'break'", "'f'", "'F'", "'s'", "'S'", "','", "'('", "')'", "'&'", "'+'", 
		"'-'", "'*'", "'/'", "'^'", "'='", "':'", "'END'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"COMMA", "LPAREN", "RPAREN", "AMP", "PLUS", "MINUS", "TIMES", "DIV", "POW", 
		"EQ", "COLON", "END", "STRINGLITERAL1", "STRINGLITERAL2", "STRING", "INTEGER", 
		"REAL", "COMMENT", "EOL", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public snobolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "snobol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\29\u01db\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\3\2\3\2\3\3"+
		"\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3"+
		"\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17"+
		"\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22"+
		"\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\25\3\25\3\25"+
		"\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3"+
		"$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/"+
		"\3/\3\60\3\60\3\60\3\60\3\61\3\61\7\61\u015f\n\61\f\61\16\61\u0162\13"+
		"\61\3\61\3\61\3\62\3\62\7\62\u0168\n\62\f\62\16\62\u016b\13\62\3\62\3"+
		"\62\3\63\3\63\7\63\u0171\n\63\f\63\16\63\u0174\13\63\3\64\5\64\u0177\n"+
		"\64\3\64\6\64\u017a\n\64\r\64\16\64\u017b\3\65\5\65\u017f\n\65\3\65\6"+
		"\65\u0182\n\65\r\65\16\65\u0183\3\65\3\65\6\65\u0188\n\65\r\65\16\65\u0189"+
		"\5\65\u018c\n\65\3\65\3\65\7\65\u0190\n\65\f\65\16\65\u0193\13\65\3\66"+
		"\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\3?\3?\3@\3@"+
		"\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L"+
		"\3L\3M\3M\3N\3N\3O\3O\3P\3P\7P\u01cb\nP\fP\16P\u01ce\13P\3Q\6Q\u01d1\n"+
		"Q\rQ\16Q\u01d2\3R\6R\u01d6\nR\rR\16R\u01d7\3R\3R\2\2S\3\3\5\4\7\5\t\6"+
		"\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24"+
		"\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K"+
		"\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\2m\2o\2q\2s\2u\2w\2y\2"+
		"{\2}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\u008d\2\u008f"+
		"\2\u0091\2\u0093\2\u0095\2\u0097\2\u0099\2\u009b\2\u009d\2\u009f\67\u00a1"+
		"8\u00a39\3\2#\5\2\f\f\17\17$$\5\2\f\f\17\17))\4\2C\\c|\5\2\62;C\\c|\4"+
		"\2--//\4\2GGgg\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2HHhh\4\2IIii\4\2JJj"+
		"j\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2"+
		"SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4"+
		"\2\\\\||\4\2\f\f\17\17\4\2\13\13\"\"\2\u01cd\2\3\3\2\2\2\2\5\3\2\2\2\2"+
		"\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2"+
		"\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2"+
		"\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2"+
		"\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2"+
		"\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2"+
		"\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2"+
		"M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3"+
		"\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2"+
		"\2\2g\3\2\2\2\2i\3\2\2\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2"+
		"\2\3\u00a5\3\2\2\2\5\u00a7\3\2\2\2\7\u00a9\3\2\2\2\t\u00af\3\2\2\2\13"+
		"\u00b6\3\2\2\2\r\u00b9\3\2\2\2\17\u00bc\3\2\2\2\21\u00bf\3\2\2\2\23\u00c2"+
		"\3\2\2\2\25\u00c5\3\2\2\2\27\u00c8\3\2\2\2\31\u00d0\3\2\2\2\33\u00d4\3"+
		"\2\2\2\35\u00d9\3\2\2\2\37\u00de\3\2\2\2!\u00e2\3\2\2\2#\u00e6\3\2\2\2"+
		"%\u00e9\3\2\2\2\'\u00ef\3\2\2\2)\u00f3\3\2\2\2+\u00f7\3\2\2\2-\u00fc\3"+
		"\2\2\2/\u0104\3\2\2\2\61\u0109\3\2\2\2\63\u0111\3\2\2\2\65\u0116\3\2\2"+
		"\2\67\u011b\3\2\2\29\u0121\3\2\2\2;\u0129\3\2\2\2=\u012f\3\2\2\2?\u0134"+
		"\3\2\2\2A\u013a\3\2\2\2C\u013c\3\2\2\2E\u013e\3\2\2\2G\u0140\3\2\2\2I"+
		"\u0142\3\2\2\2K\u0144\3\2\2\2M\u0146\3\2\2\2O\u0148\3\2\2\2Q\u014a\3\2"+
		"\2\2S\u014c\3\2\2\2U\u014e\3\2\2\2W\u0150\3\2\2\2Y\u0152\3\2\2\2[\u0154"+
		"\3\2\2\2]\u0156\3\2\2\2_\u0158\3\2\2\2a\u015c\3\2\2\2c\u0165\3\2\2\2e"+
		"\u016e\3\2\2\2g\u0176\3\2\2\2i\u017e\3\2\2\2k\u0194\3\2\2\2m\u0196\3\2"+
		"\2\2o\u0198\3\2\2\2q\u019a\3\2\2\2s\u019c\3\2\2\2u\u019e\3\2\2\2w\u01a0"+
		"\3\2\2\2y\u01a2\3\2\2\2{\u01a4\3\2\2\2}\u01a6\3\2\2\2\177\u01a8\3\2\2"+
		"\2\u0081\u01aa\3\2\2\2\u0083\u01ac\3\2\2\2\u0085\u01ae\3\2\2\2\u0087\u01b0"+
		"\3\2\2\2\u0089\u01b2\3\2\2\2\u008b\u01b4\3\2\2\2\u008d\u01b6\3\2\2\2\u008f"+
		"\u01b8\3\2\2\2\u0091\u01ba\3\2\2\2\u0093\u01bc\3\2\2\2\u0095\u01be\3\2"+
		"\2\2\u0097\u01c0\3\2\2\2\u0099\u01c2\3\2\2\2\u009b\u01c4\3\2\2\2\u009d"+
		"\u01c6\3\2\2\2\u009f\u01c8\3\2\2\2\u00a1\u01d0\3\2\2\2\u00a3\u01d5\3\2"+
		"\2\2\u00a5\u00a6\7]\2\2\u00a6\4\3\2\2\2\u00a7\u00a8\7_\2\2\u00a8\6\3\2"+
		"\2\2\u00a9\u00aa\7k\2\2\u00aa\u00ab\7f\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad"+
		"\7p\2\2\u00ad\u00ae\7v\2\2\u00ae\b\3\2\2\2\u00af\u00b0\7f\2\2\u00b0\u00b1"+
		"\7k\2\2\u00b1\u00b2\7h\2\2\u00b2\u00b3\7h\2\2\u00b3\u00b4\7g\2\2\u00b4"+
		"\u00b5\7t\2\2\u00b5\n\3\2\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8\7s\2\2\u00b8"+
		"\f\3\2\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7g\2\2\u00bb\16\3\2\2\2\u00bc"+
		"\u00bd\7i\2\2\u00bd\u00be\7g\2\2\u00be\20\3\2\2\2\u00bf\u00c0\7i\2\2\u00c0"+
		"\u00c1\7v\2\2\u00c1\22\3\2\2\2\u00c2\u00c3\7n\2\2\u00c3\u00c4\7g\2\2\u00c4"+
		"\24\3\2\2\2\u00c5\u00c6\7n\2\2\u00c6\u00c7\7v\2\2\u00c7\26\3\2\2\2\u00c8"+
		"\u00c9\7k\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7g\2\2"+
		"\u00cc\u00cd\7i\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf\7t\2\2\u00cf\30\3\2"+
		"\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7i\2\2\u00d2\u00d3\7v\2\2\u00d3\32"+
		"\3\2\2\2\u00d4\u00d5\7c\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7c\2\2\u00d7"+
		"\u00d8\7p\2\2\u00d8\34\3\2\2\2\u00d9\u00da\7e\2\2\u00da\u00db\7j\2\2\u00db"+
		"\u00dc\7q\2\2\u00dc\u00dd\7r\2\2\u00dd\36\3\2\2\2\u00de\u00df\7e\2\2\u00df"+
		"\u00e0\7q\2\2\u00e0\u00e1\7u\2\2\u00e1 \3\2\2\2\u00e2\u00e3\7g\2\2\u00e3"+
		"\u00e4\7z\2\2\u00e4\u00e5\7r\2\2\u00e5\"\3\2\2\2\u00e6\u00e7\7n\2\2\u00e7"+
		"\u00e8\7p\2\2\u00e8$\3\2\2\2\u00e9\u00ea\7t\2\2\u00ea\u00eb\7g\2\2\u00eb"+
		"\u00ec\7o\2\2\u00ec\u00ed\7f\2\2\u00ed\u00ee\7t\2\2\u00ee&\3\2\2\2\u00ef"+
		"\u00f0\7u\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7p\2\2\u00f2(\3\2\2\2\u00f3"+
		"\u00f4\7v\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7p\2\2\u00f6*\3\2\2\2\u00f7"+
		"\u00f8\7f\2\2\u00f8\u00f9\7w\2\2\u00f9\u00fa\7r\2\2\u00fa\u00fb\7n\2\2"+
		"\u00fb,\3\2\2\2\u00fc\u00fd\7t\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7x\2"+
		"\2\u00ff\u0100\7g\2\2\u0100\u0101\7t\2\2\u0101\u0102\7u\2\2\u0102\u0103"+
		"\7g\2\2\u0103.\3\2\2\2\u0104\u0105\7f\2\2\u0105\u0106\7c\2\2\u0106\u0107"+
		"\7v\2\2\u0107\u0108\7g\2\2\u0108\60\3\2\2\2\u0109\u010a\7t\2\2\u010a\u010b"+
		"\7g\2\2\u010b\u010c\7r\2\2\u010c\u010d\7n\2\2\u010d\u010e\7c\2\2\u010e"+
		"\u010f\7e\2\2\u010f\u0110\7g\2\2\u0110\62\3\2\2\2\u0111\u0112\7u\2\2\u0112"+
		"\u0113\7k\2\2\u0113\u0114\7|\2\2\u0114\u0115\7g\2\2\u0115\64\3\2\2\2\u0116"+
		"\u0117\7v\2\2\u0117\u0118\7t\2\2\u0118\u0119\7k\2\2\u0119\u011a\7o\2\2"+
		"\u011a\66\3\2\2\2\u011b\u011c\7c\2\2\u011c\u011d\7t\2\2\u011d\u011e\7"+
		"t\2\2\u011e\u011f\7c\2\2\u011f\u0120\7{\2\2\u01208\3\2\2\2\u0121\u0122"+
		"\7e\2\2\u0122\u0123\7q\2\2\u0123\u0124\7p\2\2\u0124\u0125\7x\2\2\u0125"+
		"\u0126\7g\2\2\u0126\u0127\7t\2\2\u0127\u0128\7v\2\2\u0128:\3\2\2\2\u0129"+
		"\u012a\7v\2\2\u012a\u012b\7c\2\2\u012b\u012c\7d\2\2\u012c\u012d\7n\2\2"+
		"\u012d\u012e\7g\2\2\u012e<\3\2\2\2\u012f\u0130\7u\2\2\u0130\u0131\7q\2"+
		"\2\u0131\u0132\7t\2\2\u0132\u0133\7v\2\2\u0133>\3\2\2\2\u0134\u0135\7"+
		"d\2\2\u0135\u0136\7t\2\2\u0136\u0137\7g\2\2\u0137\u0138\7c\2\2\u0138\u0139"+
		"\7m\2\2\u0139@\3\2\2\2\u013a\u013b\7h\2\2\u013bB\3\2\2\2\u013c\u013d\7"+
		"H\2\2\u013dD\3\2\2\2\u013e\u013f\7u\2\2\u013fF\3\2\2\2\u0140\u0141\7U"+
		"\2\2\u0141H\3\2\2\2\u0142\u0143\7.\2\2\u0143J\3\2\2\2\u0144\u0145\7*\2"+
		"\2\u0145L\3\2\2\2\u0146\u0147\7+\2\2\u0147N\3\2\2\2\u0148\u0149\7(\2\2"+
		"\u0149P\3\2\2\2\u014a\u014b\7-\2\2\u014bR\3\2\2\2\u014c\u014d\7/\2\2\u014d"+
		"T\3\2\2\2\u014e\u014f\7,\2\2\u014fV\3\2\2\2\u0150\u0151\7\61\2\2\u0151"+
		"X\3\2\2\2\u0152\u0153\7`\2\2\u0153Z\3\2\2\2\u0154\u0155\7?\2\2\u0155\\"+
		"\3\2\2\2\u0156\u0157\7<\2\2\u0157^\3\2\2\2\u0158\u0159\7G\2\2\u0159\u015a"+
		"\7P\2\2\u015a\u015b\7F\2\2\u015b`\3\2\2\2\u015c\u0160\7$\2\2\u015d\u015f"+
		"\n\2\2\2\u015e\u015d\3\2\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160"+
		"\u0161\3\2\2\2\u0161\u0163\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u0164\7$"+
		"\2\2\u0164b\3\2\2\2\u0165\u0169\7)\2\2\u0166\u0168\n\3\2\2\u0167\u0166"+
		"\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a"+
		"\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u016d\7)\2\2\u016dd\3\2\2\2\u016e"+
		"\u0172\t\4\2\2\u016f\u0171\t\5\2\2\u0170\u016f\3\2\2\2\u0171\u0174\3\2"+
		"\2\2\u0172\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173f\3\2\2\2\u0174\u0172"+
		"\3\2\2\2\u0175\u0177\t\6\2\2\u0176\u0175\3\2\2\2\u0176\u0177\3\2\2\2\u0177"+
		"\u0179\3\2\2\2\u0178\u017a\4\62;\2\u0179\u0178\3\2\2\2\u017a\u017b\3\2"+
		"\2\2\u017b\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017ch\3\2\2\2\u017d\u017f"+
		"\t\6\2\2\u017e\u017d\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0181\3\2\2\2\u0180"+
		"\u0182\4\62;\2\u0181\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183\u0181\3\2"+
		"\2\2\u0183\u0184\3\2\2\2\u0184\u018b\3\2\2\2\u0185\u0187\7\60\2\2\u0186"+
		"\u0188\4\62;\2\u0187\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189\u0187\3\2"+
		"\2\2\u0189\u018a\3\2\2\2\u018a\u018c\3\2\2\2\u018b\u0185\3\2\2\2\u018b"+
		"\u018c\3\2\2\2\u018c\u0191\3\2\2\2\u018d\u018e\t\7\2\2\u018e\u0190\5i"+
		"\65\2\u018f\u018d\3\2\2\2\u0190\u0193\3\2\2\2\u0191\u018f\3\2\2\2\u0191"+
		"\u0192\3\2\2\2\u0192j\3\2\2\2\u0193\u0191\3\2\2\2\u0194\u0195\t\b\2\2"+
		"\u0195l\3\2\2\2\u0196\u0197\t\t\2\2\u0197n\3\2\2\2\u0198\u0199\t\n\2\2"+
		"\u0199p\3\2\2\2\u019a\u019b\t\13\2\2\u019br\3\2\2\2\u019c\u019d\t\7\2"+
		"\2\u019dt\3\2\2\2\u019e\u019f\t\f\2\2\u019fv\3\2\2\2\u01a0\u01a1\t\r\2"+
		"\2\u01a1x\3\2\2\2\u01a2\u01a3\t\16\2\2\u01a3z\3\2\2\2\u01a4\u01a5\t\17"+
		"\2\2\u01a5|\3\2\2\2\u01a6\u01a7\t\20\2\2\u01a7~\3\2\2\2\u01a8\u01a9\t"+
		"\21\2\2\u01a9\u0080\3\2\2\2\u01aa\u01ab\t\22\2\2\u01ab\u0082\3\2\2\2\u01ac"+
		"\u01ad\t\23\2\2\u01ad\u0084\3\2\2\2\u01ae\u01af\t\24\2\2\u01af\u0086\3"+
		"\2\2\2\u01b0\u01b1\t\25\2\2\u01b1\u0088\3\2\2\2\u01b2\u01b3\t\26\2\2\u01b3"+
		"\u008a\3\2\2\2\u01b4\u01b5\t\27\2\2\u01b5\u008c\3\2\2\2\u01b6\u01b7\t"+
		"\30\2\2\u01b7\u008e\3\2\2\2\u01b8\u01b9\t\31\2\2\u01b9\u0090\3\2\2\2\u01ba"+
		"\u01bb\t\32\2\2\u01bb\u0092\3\2\2\2\u01bc\u01bd\t\33\2\2\u01bd\u0094\3"+
		"\2\2\2\u01be\u01bf\t\34\2\2\u01bf\u0096\3\2\2\2\u01c0\u01c1\t\35\2\2\u01c1"+
		"\u0098\3\2\2\2\u01c2\u01c3\t\36\2\2\u01c3\u009a\3\2\2\2\u01c4\u01c5\t"+
		"\37\2\2\u01c5\u009c\3\2\2\2\u01c6\u01c7\t \2\2\u01c7\u009e\3\2\2\2\u01c8"+
		"\u01cc\7,\2\2\u01c9\u01cb\n!\2\2\u01ca\u01c9\3\2\2\2\u01cb\u01ce\3\2\2"+
		"\2\u01cc\u01ca\3\2\2\2\u01cc\u01cd\3\2\2\2\u01cd\u00a0\3\2\2\2\u01ce\u01cc"+
		"\3\2\2\2\u01cf\u01d1\t!\2\2\u01d0\u01cf\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2"+
		"\u01d0\3\2\2\2\u01d2\u01d3\3\2\2\2\u01d3\u00a2\3\2\2\2\u01d4\u01d6\t\""+
		"\2\2\u01d5\u01d4\3\2\2\2\u01d6\u01d7\3\2\2\2\u01d7\u01d5\3\2\2\2\u01d7"+
		"\u01d8\3\2\2\2\u01d8\u01d9\3\2\2\2\u01d9\u01da\bR\2\2\u01da\u00a4\3\2"+
		"\2\2\20\2\u0160\u0169\u0172\u0176\u017b\u017e\u0183\u0189\u018b\u0191"+
		"\u01cc\u01d2\u01d7\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}