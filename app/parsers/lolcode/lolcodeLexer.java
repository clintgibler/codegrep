// Generated from lolcode/lolcode.g4 by ANTLR 4.7.1
package parsers.lolcode;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class lolcodeLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, LABEL=41, ATOM=42, STRING=43, WS=44;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "LABEL", 
		"ATOM", "STRING", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'HAI'", "'KTHXBYE'", "'IM IN YR'", "'WILE'", "'IM OUTTA YR'", "'I HAS A'", 
		"'ITZ'", "'BTW'", "'OBTW'", "'TLDR'", "'VISIBLE'", "'MKAY?'", "'O RLY?'", 
		"'YA RLY'", "'OIC'", "'MEBBE'", "'NO WAI'", "'GIMMEH'", "'HOW DUZ I'", 
		"'YR'", "'AN YR'", "'IF U SAY SO'", "'R'", "'BOTH SAEM'", "'AN'", "'DIFFRINT'", 
		"'BOTH OF'", "'EITHER OF'", "'BIGGR OF'", "'SMALLR OF'", "'SUM OF'", "'DIFF OF'", 
		"'PRODUKT OF'", "'QUOSHUNT OF'", "'MOD OF'", "'MAEK'", "'A'", "'ALL OF'", 
		"'ANY OF'", "'NOT'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, "LABEL", "ATOM", "STRING", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public lolcodeLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "lolcode.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.\u01a5\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b"+
		"\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f"+
		"\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3"+
		"\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3"+
		"\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3"+
		" \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3"+
		"\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$"+
		"\3$\3$\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3"+
		"(\3(\3(\3)\3)\3)\3)\3*\6*\u0173\n*\r*\16*\u0174\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\3+\3+\3+\6+\u0183\n+\r+\16+\u0184\3+\7+\u0188\n+\f+\16+\u018b\13"+
		"+\3+\3+\7+\u018f\n+\f+\16+\u0192\13+\3+\5+\u0195\n+\3,\3,\3,\3,\7,\u019b"+
		"\n,\f,\16,\u019e\13,\3,\3,\3-\3-\3-\3-\2\2.\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.\3\2\5\6\2\62;C\\aac|\3\2$$\5\2\f\f\17\17\"\"\2\u01af\2\3\3\2\2"+
		"\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3"+
		"\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2"+
		"\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2"+
		"\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2"+
		"\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3"+
		"\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2"+
		"\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2"+
		"W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5_\3\2\2\2\7g\3\2\2\2\tp\3\2\2\2\13u\3"+
		"\2\2\2\r\u0081\3\2\2\2\17\u0089\3\2\2\2\21\u008d\3\2\2\2\23\u0091\3\2"+
		"\2\2\25\u0096\3\2\2\2\27\u009b\3\2\2\2\31\u00a3\3\2\2\2\33\u00a9\3\2\2"+
		"\2\35\u00b0\3\2\2\2\37\u00b7\3\2\2\2!\u00bb\3\2\2\2#\u00c1\3\2\2\2%\u00c8"+
		"\3\2\2\2\'\u00cf\3\2\2\2)\u00d9\3\2\2\2+\u00dc\3\2\2\2-\u00e2\3\2\2\2"+
		"/\u00ee\3\2\2\2\61\u00f0\3\2\2\2\63\u00fa\3\2\2\2\65\u00fd\3\2\2\2\67"+
		"\u0106\3\2\2\29\u010e\3\2\2\2;\u0118\3\2\2\2=\u0121\3\2\2\2?\u012b\3\2"+
		"\2\2A\u0132\3\2\2\2C\u013a\3\2\2\2E\u0145\3\2\2\2G\u0151\3\2\2\2I\u0158"+
		"\3\2\2\2K\u015d\3\2\2\2M\u015f\3\2\2\2O\u0166\3\2\2\2Q\u016d\3\2\2\2S"+
		"\u0172\3\2\2\2U\u0194\3\2\2\2W\u0196\3\2\2\2Y\u01a1\3\2\2\2[\\\7J\2\2"+
		"\\]\7C\2\2]^\7K\2\2^\4\3\2\2\2_`\7M\2\2`a\7V\2\2ab\7J\2\2bc\7Z\2\2cd\7"+
		"D\2\2de\7[\2\2ef\7G\2\2f\6\3\2\2\2gh\7K\2\2hi\7O\2\2ij\7\"\2\2jk\7K\2"+
		"\2kl\7P\2\2lm\7\"\2\2mn\7[\2\2no\7T\2\2o\b\3\2\2\2pq\7Y\2\2qr\7K\2\2r"+
		"s\7N\2\2st\7G\2\2t\n\3\2\2\2uv\7K\2\2vw\7O\2\2wx\7\"\2\2xy\7Q\2\2yz\7"+
		"W\2\2z{\7V\2\2{|\7V\2\2|}\7C\2\2}~\7\"\2\2~\177\7[\2\2\177\u0080\7T\2"+
		"\2\u0080\f\3\2\2\2\u0081\u0082\7K\2\2\u0082\u0083\7\"\2\2\u0083\u0084"+
		"\7J\2\2\u0084\u0085\7C\2\2\u0085\u0086\7U\2\2\u0086\u0087\7\"\2\2\u0087"+
		"\u0088\7C\2\2\u0088\16\3\2\2\2\u0089\u008a\7K\2\2\u008a\u008b\7V\2\2\u008b"+
		"\u008c\7\\\2\2\u008c\20\3\2\2\2\u008d\u008e\7D\2\2\u008e\u008f\7V\2\2"+
		"\u008f\u0090\7Y\2\2\u0090\22\3\2\2\2\u0091\u0092\7Q\2\2\u0092\u0093\7"+
		"D\2\2\u0093\u0094\7V\2\2\u0094\u0095\7Y\2\2\u0095\24\3\2\2\2\u0096\u0097"+
		"\7V\2\2\u0097\u0098\7N\2\2\u0098\u0099\7F\2\2\u0099\u009a\7T\2\2\u009a"+
		"\26\3\2\2\2\u009b\u009c\7X\2\2\u009c\u009d\7K\2\2\u009d\u009e\7U\2\2\u009e"+
		"\u009f\7K\2\2\u009f\u00a0\7D\2\2\u00a0\u00a1\7N\2\2\u00a1\u00a2\7G\2\2"+
		"\u00a2\30\3\2\2\2\u00a3\u00a4\7O\2\2\u00a4\u00a5\7M\2\2\u00a5\u00a6\7"+
		"C\2\2\u00a6\u00a7\7[\2\2\u00a7\u00a8\7A\2\2\u00a8\32\3\2\2\2\u00a9\u00aa"+
		"\7Q\2\2\u00aa\u00ab\7\"\2\2\u00ab\u00ac\7T\2\2\u00ac\u00ad\7N\2\2\u00ad"+
		"\u00ae\7[\2\2\u00ae\u00af\7A\2\2\u00af\34\3\2\2\2\u00b0\u00b1\7[\2\2\u00b1"+
		"\u00b2\7C\2\2\u00b2\u00b3\7\"\2\2\u00b3\u00b4\7T\2\2\u00b4\u00b5\7N\2"+
		"\2\u00b5\u00b6\7[\2\2\u00b6\36\3\2\2\2\u00b7\u00b8\7Q\2\2\u00b8\u00b9"+
		"\7K\2\2\u00b9\u00ba\7E\2\2\u00ba \3\2\2\2\u00bb\u00bc\7O\2\2\u00bc\u00bd"+
		"\7G\2\2\u00bd\u00be\7D\2\2\u00be\u00bf\7D\2\2\u00bf\u00c0\7G\2\2\u00c0"+
		"\"\3\2\2\2\u00c1\u00c2\7P\2\2\u00c2\u00c3\7Q\2\2\u00c3\u00c4\7\"\2\2\u00c4"+
		"\u00c5\7Y\2\2\u00c5\u00c6\7C\2\2\u00c6\u00c7\7K\2\2\u00c7$\3\2\2\2\u00c8"+
		"\u00c9\7I\2\2\u00c9\u00ca\7K\2\2\u00ca\u00cb\7O\2\2\u00cb\u00cc\7O\2\2"+
		"\u00cc\u00cd\7G\2\2\u00cd\u00ce\7J\2\2\u00ce&\3\2\2\2\u00cf\u00d0\7J\2"+
		"\2\u00d0\u00d1\7Q\2\2\u00d1\u00d2\7Y\2\2\u00d2\u00d3\7\"\2\2\u00d3\u00d4"+
		"\7F\2\2\u00d4\u00d5\7W\2\2\u00d5\u00d6\7\\\2\2\u00d6\u00d7\7\"\2\2\u00d7"+
		"\u00d8\7K\2\2\u00d8(\3\2\2\2\u00d9\u00da\7[\2\2\u00da\u00db\7T\2\2\u00db"+
		"*\3\2\2\2\u00dc\u00dd\7C\2\2\u00dd\u00de\7P\2\2\u00de\u00df\7\"\2\2\u00df"+
		"\u00e0\7[\2\2\u00e0\u00e1\7T\2\2\u00e1,\3\2\2\2\u00e2\u00e3\7K\2\2\u00e3"+
		"\u00e4\7H\2\2\u00e4\u00e5\7\"\2\2\u00e5\u00e6\7W\2\2\u00e6\u00e7\7\"\2"+
		"\2\u00e7\u00e8\7U\2\2\u00e8\u00e9\7C\2\2\u00e9\u00ea\7[\2\2\u00ea\u00eb"+
		"\7\"\2\2\u00eb\u00ec\7U\2\2\u00ec\u00ed\7Q\2\2\u00ed.\3\2\2\2\u00ee\u00ef"+
		"\7T\2\2\u00ef\60\3\2\2\2\u00f0\u00f1\7D\2\2\u00f1\u00f2\7Q\2\2\u00f2\u00f3"+
		"\7V\2\2\u00f3\u00f4\7J\2\2\u00f4\u00f5\7\"\2\2\u00f5\u00f6\7U\2\2\u00f6"+
		"\u00f7\7C\2\2\u00f7\u00f8\7G\2\2\u00f8\u00f9\7O\2\2\u00f9\62\3\2\2\2\u00fa"+
		"\u00fb\7C\2\2\u00fb\u00fc\7P\2\2\u00fc\64\3\2\2\2\u00fd\u00fe\7F\2\2\u00fe"+
		"\u00ff\7K\2\2\u00ff\u0100\7H\2\2\u0100\u0101\7H\2\2\u0101\u0102\7T\2\2"+
		"\u0102\u0103\7K\2\2\u0103\u0104\7P\2\2\u0104\u0105\7V\2\2\u0105\66\3\2"+
		"\2\2\u0106\u0107\7D\2\2\u0107\u0108\7Q\2\2\u0108\u0109\7V\2\2\u0109\u010a"+
		"\7J\2\2\u010a\u010b\7\"\2\2\u010b\u010c\7Q\2\2\u010c\u010d\7H\2\2\u010d"+
		"8\3\2\2\2\u010e\u010f\7G\2\2\u010f\u0110\7K\2\2\u0110\u0111\7V\2\2\u0111"+
		"\u0112\7J\2\2\u0112\u0113\7G\2\2\u0113\u0114\7T\2\2\u0114\u0115\7\"\2"+
		"\2\u0115\u0116\7Q\2\2\u0116\u0117\7H\2\2\u0117:\3\2\2\2\u0118\u0119\7"+
		"D\2\2\u0119\u011a\7K\2\2\u011a\u011b\7I\2\2\u011b\u011c\7I\2\2\u011c\u011d"+
		"\7T\2\2\u011d\u011e\7\"\2\2\u011e\u011f\7Q\2\2\u011f\u0120\7H\2\2\u0120"+
		"<\3\2\2\2\u0121\u0122\7U\2\2\u0122\u0123\7O\2\2\u0123\u0124\7C\2\2\u0124"+
		"\u0125\7N\2\2\u0125\u0126\7N\2\2\u0126\u0127\7T\2\2\u0127\u0128\7\"\2"+
		"\2\u0128\u0129\7Q\2\2\u0129\u012a\7H\2\2\u012a>\3\2\2\2\u012b\u012c\7"+
		"U\2\2\u012c\u012d\7W\2\2\u012d\u012e\7O\2\2\u012e\u012f\7\"\2\2\u012f"+
		"\u0130\7Q\2\2\u0130\u0131\7H\2\2\u0131@\3\2\2\2\u0132\u0133\7F\2\2\u0133"+
		"\u0134\7K\2\2\u0134\u0135\7H\2\2\u0135\u0136\7H\2\2\u0136\u0137\7\"\2"+
		"\2\u0137\u0138\7Q\2\2\u0138\u0139\7H\2\2\u0139B\3\2\2\2\u013a\u013b\7"+
		"R\2\2\u013b\u013c\7T\2\2\u013c\u013d\7Q\2\2\u013d\u013e\7F\2\2\u013e\u013f"+
		"\7W\2\2\u013f\u0140\7M\2\2\u0140\u0141\7V\2\2\u0141\u0142\7\"\2\2\u0142"+
		"\u0143\7Q\2\2\u0143\u0144\7H\2\2\u0144D\3\2\2\2\u0145\u0146\7S\2\2\u0146"+
		"\u0147\7W\2\2\u0147\u0148\7Q\2\2\u0148\u0149\7U\2\2\u0149\u014a\7J\2\2"+
		"\u014a\u014b\7W\2\2\u014b\u014c\7P\2\2\u014c\u014d\7V\2\2\u014d\u014e"+
		"\7\"\2\2\u014e\u014f\7Q\2\2\u014f\u0150\7H\2\2\u0150F\3\2\2\2\u0151\u0152"+
		"\7O\2\2\u0152\u0153\7Q\2\2\u0153\u0154\7F\2\2\u0154\u0155\7\"\2\2\u0155"+
		"\u0156\7Q\2\2\u0156\u0157\7H\2\2\u0157H\3\2\2\2\u0158\u0159\7O\2\2\u0159"+
		"\u015a\7C\2\2\u015a\u015b\7G\2\2\u015b\u015c\7M\2\2\u015cJ\3\2\2\2\u015d"+
		"\u015e\7C\2\2\u015eL\3\2\2\2\u015f\u0160\7C\2\2\u0160\u0161\7N\2\2\u0161"+
		"\u0162\7N\2\2\u0162\u0163\7\"\2\2\u0163\u0164\7Q\2\2\u0164\u0165\7H\2"+
		"\2\u0165N\3\2\2\2\u0166\u0167\7C\2\2\u0167\u0168\7P\2\2\u0168\u0169\7"+
		"[\2\2\u0169\u016a\7\"\2\2\u016a\u016b\7Q\2\2\u016b\u016c\7H\2\2\u016c"+
		"P\3\2\2\2\u016d\u016e\7P\2\2\u016e\u016f\7Q\2\2\u016f\u0170\7V\2\2\u0170"+
		"R\3\2\2\2\u0171\u0173\t\2\2\2\u0172\u0171\3\2\2\2\u0173\u0174\3\2\2\2"+
		"\u0174\u0172\3\2\2\2\u0174\u0175\3\2\2\2\u0175T\3\2\2\2\u0176\u0177\7"+
		"Y\2\2\u0177\u0178\7K\2\2\u0178\u0195\7P\2\2\u0179\u017a\7H\2\2\u017a\u017b"+
		"\7C\2\2\u017b\u017c\7K\2\2\u017c\u0195\7N\2\2\u017d\u017e\7P\2\2\u017e"+
		"\u017f\7Q\2\2\u017f\u0180\7Q\2\2\u0180\u0195\7D\2\2\u0181\u0183\4\62;"+
		"\2\u0182\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0182\3\2\2\2\u0184\u0185"+
		"\3\2\2\2\u0185\u0195\3\2\2\2\u0186\u0188\4\62;\2\u0187\u0186\3\2\2\2\u0188"+
		"\u018b\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018c\3\2"+
		"\2\2\u018b\u0189\3\2\2\2\u018c\u0190\7\60\2\2\u018d\u018f\4\62;\2\u018e"+
		"\u018d\3\2\2\2\u018f\u0192\3\2\2\2\u0190\u018e\3\2\2\2\u0190\u0191\3\2"+
		"\2\2\u0191\u0195\3\2\2\2\u0192\u0190\3\2\2\2\u0193\u0195\5W,\2\u0194\u0176"+
		"\3\2\2\2\u0194\u0179\3\2\2\2\u0194\u017d\3\2\2\2\u0194\u0182\3\2\2\2\u0194"+
		"\u0189\3\2\2\2\u0194\u0193\3\2\2\2\u0195V\3\2\2\2\u0196\u019c\7$\2\2\u0197"+
		"\u0198\7)\2\2\u0198\u019b\7$\2\2\u0199\u019b\n\3\2\2\u019a\u0197\3\2\2"+
		"\2\u019a\u0199\3\2\2\2\u019b\u019e\3\2\2\2\u019c\u019a\3\2\2\2\u019c\u019d"+
		"\3\2\2\2\u019d\u019f\3\2\2\2\u019e\u019c\3\2\2\2\u019f\u01a0\7$\2\2\u01a0"+
		"X\3\2\2\2\u01a1\u01a2\t\4\2\2\u01a2\u01a3\3\2\2\2\u01a3\u01a4\b-\2\2\u01a4"+
		"Z\3\2\2\2\n\2\u0174\u0184\u0189\u0190\u0194\u019a\u019c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}